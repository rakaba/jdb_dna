# Generated by Django 3.1.6 on 2021-02-02 09:42

from django.db import migrations, models
import django.utils.timezone
import logetapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FloraExpertModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floraexperttestid', models.CharField(max_length=100, unique=True)),
                ('floraexperttestpass', models.CharField(max_length=100)),
                ('floraexpertansno', models.CharField(blank=True, max_length=100, null=True)),
                ('floraexpertcheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('floraexpertname', models.CharField(blank=True, max_length=100, null=True)),
                ('floraexpertstoreid', models.CharField(blank=True, max_length=100, null=True)),
                ('floraexpertdate', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FloraLightModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floralighttestid', models.CharField(max_length=100, unique=True)),
                ('floralighttestpass', models.CharField(max_length=100)),
                ('floralightansno', models.CharField(blank=True, max_length=100, null=True)),
                ('floralightcheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('floralightname', models.CharField(blank=True, max_length=100, null=True)),
                ('floralightstoreid', models.CharField(blank=True, max_length=100, null=True)),
                ('floralightdate', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FoodProteinModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foodproteintestid', models.CharField(max_length=100, unique=True)),
                ('foodproteintestpass', models.CharField(max_length=100)),
                ('foodproteinansno', models.CharField(blank=True, max_length=100, null=True)),
                ('foodproteincheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('foodproteinname', models.CharField(blank=True, max_length=100, null=True)),
                ('foodproteinstoreid', models.CharField(blank=True, max_length=100, null=True)),
                ('foodproteindate', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HeadDnaModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headtestid', models.CharField(max_length=100, unique=True)),
                ('headtestpass', models.CharField(max_length=100)),
                ('headansno', models.CharField(blank=True, max_length=100, null=True)),
                ('headcheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('headname', models.CharField(blank=True, max_length=100, null=True)),
                ('headstoreid', models.CharField(blank=True, max_length=100, null=True)),
                ('headdate', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MuscleDnaModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('muscletestid', models.CharField(max_length=100, unique=True)),
                ('muscletestpass', models.CharField(max_length=100)),
                ('muscleansno', models.CharField(blank=True, max_length=100, null=True)),
                ('musclecheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('musclename', models.CharField(blank=True, max_length=100, null=True)),
                ('musclestoreid', models.CharField(blank=True, max_length=100, null=True)),
                ('muscledate', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OtherModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('othertestid', models.CharField(max_length=100, unique=True)),
                ('othertestpass', models.CharField(max_length=100)),
                ('otheransno', models.CharField(blank=True, max_length=100, null=True)),
                ('othercheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('othername', models.CharField(blank=True, max_length=100, null=True)),
                ('otherstoreid', models.CharField(blank=True, max_length=100, null=True)),
                ('otherdate', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SkinDnaModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skintestid', models.CharField(max_length=100, unique=True)),
                ('skintestpass', models.CharField(max_length=100)),
                ('skinansno', models.CharField(blank=True, max_length=100, null=True)),
                ('skincheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('skinname', models.CharField(blank=True, max_length=100, null=True)),
                ('skinstoreid', models.CharField(blank=True, max_length=100, null=True)),
                ('skindate', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StoreModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storeid', models.CharField(max_length=100, unique=True)),
                ('storename', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StyleDnaModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('styletestid', models.CharField(max_length=100, unique=True)),
                ('styletestpass', models.CharField(max_length=100)),
                ('styleansno', models.CharField(blank=True, max_length=100, null=True)),
                ('stylecheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('stylename', models.CharField(blank=True, max_length=100, null=True)),
                ('stylestoreid', models.CharField(blank=True, max_length=100, null=True)),
                ('styledate', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('storeid', models.CharField(blank=True, max_length=100, null=True)),
                ('styletestid', models.CharField(blank=True, max_length=100, null=True)),
                ('styletestpass', models.CharField(blank=True, max_length=100, null=True)),
                ('stylecheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('styleansno', models.CharField(blank=True, max_length=100, null=True)),
                ('styletestername', models.CharField(blank=True, max_length=100, null=True)),
                ('skintestid', models.CharField(blank=True, max_length=100, null=True)),
                ('skintestpass', models.CharField(blank=True, max_length=100, null=True)),
                ('skincheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('skinansno', models.CharField(blank=True, max_length=100, null=True)),
                ('skintestername', models.CharField(blank=True, max_length=100, null=True)),
                ('muscletestid', models.CharField(blank=True, max_length=100, null=True)),
                ('muscletestpass', models.CharField(blank=True, max_length=100, null=True)),
                ('musclecheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('muscleansno', models.CharField(blank=True, max_length=100, null=True)),
                ('muscletestername', models.CharField(blank=True, max_length=100, null=True)),
                ('headtestid', models.CharField(blank=True, max_length=100, null=True)),
                ('headtestpass', models.CharField(blank=True, max_length=100, null=True)),
                ('headcheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('headansno', models.CharField(blank=True, max_length=100, null=True)),
                ('headtestername', models.CharField(blank=True, max_length=100, null=True)),
                ('floralighttestid', models.CharField(blank=True, max_length=100, null=True)),
                ('floralighttestpass', models.CharField(blank=True, max_length=100, null=True)),
                ('floralightcheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('floralightansno', models.CharField(blank=True, max_length=100, null=True)),
                ('floralighttestername', models.CharField(blank=True, max_length=100, null=True)),
                ('floraexperttestid', models.CharField(blank=True, max_length=100, null=True)),
                ('floraexperttestpass', models.CharField(blank=True, max_length=100, null=True)),
                ('floraexpertcheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('floraexpertansno', models.CharField(blank=True, max_length=100, null=True)),
                ('floraexperttestername', models.CharField(blank=True, max_length=100, null=True)),
                ('foodproteintestid', models.CharField(blank=True, max_length=100, null=True)),
                ('foodproteintestpass', models.CharField(blank=True, max_length=100, null=True)),
                ('foodproteincheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('foodproteinansno', models.CharField(blank=True, max_length=100, null=True)),
                ('foodproteintestername', models.CharField(blank=True, max_length=100, null=True)),
                ('othertestid', models.CharField(blank=True, max_length=100, null=True)),
                ('othertestpass', models.CharField(blank=True, max_length=100, null=True)),
                ('othercheckcode', models.CharField(blank=True, max_length=100, null=True)),
                ('otheransno', models.CharField(blank=True, max_length=100, null=True)),
                ('othertestername', models.CharField(blank=True, max_length=100, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', logetapp.models.CustomUserManager()),
            ],
        ),
    ]
